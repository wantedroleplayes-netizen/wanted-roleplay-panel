# ========================================
# SCRIPT DE VERIFICACI√ìN DE CONEXI√ìN
# Ejecutar DESPU√âS de configurar todo
# ========================================

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  WANTED ROLEPLAY - TEST DE CONEXI√ìN" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Obtener IPs
Write-Host "üì° Obteniendo informaci√≥n de red..." -ForegroundColor Yellow
Write-Host ""

# IP Local
$ipLocal = (Get-NetIPAddress -AddressFamily IPv4 | Where-Object {$_.IPAddress -like "192.168.*"}).IPAddress
Write-Host "üè† IP Local: $ipLocal" -ForegroundColor Green

# IP P√∫blica
try {
    $ipPublica = Invoke-RestMethod -Uri "https://api.ipify.org"
    Write-Host "üåê IP P√∫blica: $ipPublica" -ForegroundColor Green
} catch {
    Write-Host "‚ùå No se pudo obtener IP p√∫blica" -ForegroundColor Red
    $ipPublica = "No disponible"
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Verificar si el servidor est√° corriendo
Write-Host "üîç Verificando si el servidor est√° corriendo..." -ForegroundColor Yellow

$serverRunning = Get-Process -Name "node" -ErrorAction SilentlyContinue

if ($serverRunning) {
    Write-Host "‚úÖ Servidor Node.js est√° corriendo" -ForegroundColor Green
    Write-Host "   PIDs: $($serverRunning.Id -join ', ')" -ForegroundColor White
} else {
    Write-Host "‚ùå Servidor Node.js NO est√° corriendo" -ForegroundColor Red
    Write-Host "   Ejecuta: node server.js" -ForegroundColor Yellow
}

Write-Host ""

# Verificar puerto 3000
Write-Host "üîç Verificando puerto 3000..." -ForegroundColor Yellow

try {
    $puerto = Get-NetTCPConnection -LocalPort 3000 -ErrorAction SilentlyContinue
    if ($puerto) {
        Write-Host "‚úÖ Puerto 3000 est√° en uso (servidor escuchando)" -ForegroundColor Green
        Write-Host "   Estado: $($puerto.State)" -ForegroundColor White
    } else {
        Write-Host "‚ö†Ô∏è  Puerto 3000 no est√° en uso" -ForegroundColor Yellow
        Write-Host "   El servidor debe estar corriendo" -ForegroundColor White
    }
} catch {
    Write-Host "‚ö†Ô∏è  No se pudo verificar el puerto" -ForegroundColor Yellow
}

Write-Host ""

# Verificar reglas de firewall
Write-Host "üîç Verificando reglas de firewall..." -ForegroundColor Yellow

$firewallRules = Get-NetFirewallRule -DisplayName "Wanted Roleplay Panel*" -ErrorAction SilentlyContinue

if ($firewallRules) {
    Write-Host "‚úÖ Reglas de firewall configuradas" -ForegroundColor Green
    foreach ($rule in $firewallRules) {
        $enabled = if ($rule.Enabled -eq "True") { "‚úì" } else { "‚úó" }
        Write-Host "   $enabled $($rule.DisplayName) - $($rule.Direction)" -ForegroundColor White
    }
} else {
    Write-Host "‚ùå No hay reglas de firewall configuradas" -ForegroundColor Red
    Write-Host "   Ejecuta: .\setup-firewall.ps1 como ADMINISTRADOR" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Test de conexi√≥n local
Write-Host "üß™ Probando conexi√≥n LOCAL..." -ForegroundColor Yellow

try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000" -TimeoutSec 5 -UseBasicParsing -ErrorAction Stop
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Conexi√≥n LOCAL exitosa (localhost:3000)" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå No se pudo conectar localmente" -ForegroundColor Red
    Write-Host "   Error: $($_.Exception.Message)" -ForegroundColor White
}

Write-Host ""

# Test de conexi√≥n por IP local
Write-Host "üß™ Probando conexi√≥n por IP LOCAL..." -ForegroundColor Yellow

try {
    $response = Invoke-WebRequest -Uri "http://${ipLocal}:3000" -TimeoutSec 5 -UseBasicParsing -ErrorAction Stop
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Conexi√≥n por IP LOCAL exitosa ($ipLocal:3000)" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå No se pudo conectar por IP local" -ForegroundColor Red
    Write-Host "   Error: $($_.Exception.Message)" -ForegroundColor White
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  RESUMEN" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# URLs para probar
Write-Host "üìã URLs para probar:" -ForegroundColor Yellow
Write-Host ""
Write-Host "1Ô∏è‚É£  Desde TU PC:" -ForegroundColor Cyan
Write-Host "   http://localhost:3000" -ForegroundColor White
Write-Host ""
Write-Host "2Ô∏è‚É£  Desde otros dispositivos en TU CASA (WiFi):" -ForegroundColor Cyan
Write-Host "   http://${ipLocal}:3000" -ForegroundColor White
Write-Host ""
Write-Host "3Ô∏è‚É£  Desde INTERNET (tus amigos):" -ForegroundColor Cyan
Write-Host "   http://${ipPublica}:3000" -ForegroundColor White
Write-Host ""

Write-Host "‚ö†Ô∏è  IMPORTANTE - Para que opci√≥n 3 funcione:" -ForegroundColor Yellow
Write-Host "   ‚úì Debes configurar Port Forwarding en tu router" -ForegroundColor White
Write-Host "   ‚úì Puerto: 3000 ‚Üí 3000" -ForegroundColor White
Write-Host "   ‚úì IP interna: $ipLocal" -ForegroundColor White
Write-Host "   ‚úì Protocolo: TCP" -ForegroundColor White
Write-Host ""

Write-Host "üìñ Lee el archivo CONFIGURACION_TU_PC.md para m√°s detalles" -ForegroundColor Green
Write-Host ""

Write-Host "üîó Verificar puerto desde internet:" -ForegroundColor Yellow
Write-Host "   https://www.yougetsignal.com/tools/open-ports/" -ForegroundColor Cyan
Write-Host "   IP: $ipPublica" -ForegroundColor White
Write-Host "   Puerto: 3000" -ForegroundColor White
Write-Host ""

Read-Host "Presiona Enter para salir"
